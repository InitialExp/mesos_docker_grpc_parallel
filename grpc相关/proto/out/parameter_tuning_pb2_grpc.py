# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import parameter_tuning_pb2 as parameter__tuning__pb2


class hptuningStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.gridsearch = channel.unary_unary(
        '/hptuning.hptuning/gridsearch',
        request_serializer=parameter__tuning__pb2.tasks_difine.SerializeToString,
        response_deserializer=parameter__tuning__pb2.hptuning_tasks.FromString,
        )
    self.stopServer = channel.unary_unary(
        '/hptuning.hptuning/stopServer',
        request_serializer=parameter__tuning__pb2.flag.SerializeToString,
        response_deserializer=parameter__tuning__pb2.flag.FromString,
        )


class hptuningServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def gridsearch(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def stopServer(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_hptuningServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'gridsearch': grpc.unary_unary_rpc_method_handler(
          servicer.gridsearch,
          request_deserializer=parameter__tuning__pb2.tasks_difine.FromString,
          response_serializer=parameter__tuning__pb2.hptuning_tasks.SerializeToString,
      ),
      'stopServer': grpc.unary_unary_rpc_method_handler(
          servicer.stopServer,
          request_deserializer=parameter__tuning__pb2.flag.FromString,
          response_serializer=parameter__tuning__pb2.flag.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'hptuning.hptuning', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
